plugins {
    id 'java-library'
    id 'war'
}

//idea {
//    module {
//        sourceDirs += file('build/generated/jaxb')
//        generatedSourceDirs += file('build/generated/jaxb')
//    }
//}

sourceCompatibility = 12
targetCompatibility = 12

repositories {
    mavenCentral()
}

sourceSets.main.java.srcDirs "build/generated/jaxb"

configurations {
    jaxb
}

dependencies {
    jaxb (
            'com.sun.xml.bind:jaxb-xjc:2.3.1',
            'com.sun.xml.bind:jaxb-impl:2.3.1',
            'org.glassfish.jaxb:jaxb-runtime:2.3.3'
    )

    // JAX-B dependencies for JDK 9+
    implementation "jakarta.xml.bind:jakarta.xml.bind-api:2.3.2"
    implementation "org.glassfish.jaxb:jaxb-runtime:2.3.2"
    providedCompile 'org.apache.tomcat:tomcat-catalina:7.0.47'

    // Test
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.8.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.8.2")
}

task jaxb {
    System.setProperty('javax.xml.accessExternalSchema', 'all')
    def jaxbTargetDir = file("build/generated/jaxb")
    doLast {
        jaxbTargetDir.mkdirs()
        ant.taskdef(
                name: 'xjc',
                classname: 'com.sun.tools.xjc.XJCTask',
                classpath: configurations.jaxb.asPath
        )
        ant.jaxbTargetDir = jaxbTargetDir
        ant.xjc(
                destdir: '${jaxbTargetDir}',
                package: 'com.test.astraia.model.xsd',
                schema: 'src/main/resources/xsd/report.xsd'
        )
    }
}
test {
    useJUnitPlatform()
}
compileJava.dependsOn jaxb

jar {
    manifest {
        attributes "Main-Class": "com.test.astraia.AstraiaTestReportApp"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}